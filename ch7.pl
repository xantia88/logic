
start:-
    dialog(security), % выяснить про политику информационной безопасности в компании
    dialog(business), % выяснить как бизнес подразделение использует систему 
    dialog(clients), % выяснить как клиенты взаимодействуют с системой
    dialog(employees), % выяснить как сотрудники взаимодействуют с системой
    dialog(admins). % выяснить как осуществляется администрирование системы

% практика киберберзопасности в компании
dialog(security):-
    ask("В компании есть собственное подразделение, выполняющее функции кибербезопасности", Local),
    (
        not(true(Local)) ->
        ask("Компания привлекает стороннюю организацию для обеспечения функции кибербезопасности")
    ;   !    
    ),
    ask("В компании есть утвержденная политика информационной безопасности", Policy),
    (   % если есть утвержденная политика информационной безопасности
        true(Policy) ->
        ask("Утвержденная политика информационной безопасности определяет конфиденциальную информацию"),
        text("Номер приказа об утверждении политики информационной безопасности"),
        text("Дата утверждения политики информационной безопасности")
    ;   !
    ),
    ask("Система содержит конфиденциальные данные"),
    ask("В компании есть утвержденные ВНД с требованиями к журналу аудита", Audit),
    (
        true(Audit) ->
        ask("Утвержденные ВНД определяют сроки хранения журнала аудита"),
        ask("Утвержденные ВНД определяют содержимое, объем и полноту данных в журнале аудита"),
        ask("Ведение журнала аудита осуществляется централизовано на уровне компании"),
        text("Номер приказа об утверждении документа"),
        text("Дата утверждения документа")
    ;   !
    ),
    ask("Система имеет функциональность журналирования событий аудита"),
    ask("В компании есть утвержденные ВНД с требованиями к протоколу системных событий", Protocol),
    (
        true(Protocol) ->
        ask("Утвержденные ВНД определяют содержимое, объем и полноту данных в протоколе системных событий"),
        ask("Ведение прокола системных событий осуществляется централизовано на уровне компании"),
        text("Номер приказа об утверждении документа"),
        text("Дата утверждения документа")
    ;   !
    ),
    ask("Система реализует функцию протоколирования событий безопасности"),
    ask("Система реализует функцию протоколирования действий пользователей").

% основные бизнес параметры системы
dialog(business):-
    ask("Владельцем системы является бизнес подразделение компании"),
    ask("Владелец системы формально закреплен", Owner),
    (   % если задан владелец системы
        true(Owner) ->
        text("Название и номер документа формально закрепляющего владельца системы"),
        text("Дата утверждения документа о закреплении владельца системы")
    ;   !
    ),
    ask("Есть заполненный калькулятор критичности", Calculator),
    (   % если есть заполненный калькулятор
        true(Calculator) ->
        options("Рассчитанное значение уровня критичности системы", [mc, bc, bo, op]),
        text("Дата расчета уровня критичности")
    ;   !
    ),
    ask("У системы есть заданные требования по производительности", Performance),
    (   % если есть требования по производительности
        true(Performance) ->
        dialog(sla)
    ;   !
    ),
    ask("У системы есть заданные требования по масштабируемости", Scalability),
    (   % если есть требования по масштабируемости
        true(Scalability) ->
        dialog(sla)
    ;   !
    ),
    ask("У системы есть заданные требования по отказоустойчивости", Tolerance),
    (   % если есть требования по отказоустойчивости
        true(Tolerance) ->
        dialog(sla)
    ;   !
    ),
    ask("У системы есть заданные требования по доступности", Availability),
    (   % если есть требования по доступности
        true(Availability) ->
        dialog(sla)
    ;   !
    ),
    ask("У системы есть заданные требования по катастрофоустойчивости", Catastrophe),
    (   % если есть требования по катастрофоустойчивости
        true(Catastrophe) ->
        dialog(sla)
    ;   !
    ).

% пользовательские сценарии (use cases)
dialog(scenarios):-
    repeat,
    ask("Добавить описание пользовательского сценария взаимодействия с системой", Scenario),
    (
        true(Scenario) ->
        text("Зачем пользователь использует систему"), fail
    ;   !
    ).

% основные параметры SLA
dialog(sla):-
    ask("Целевые параметры заданы ввиде соглашения об уровне сервиса (SLA)", Sla),
    (   % если для системы заданы параменты SLA
        true(Sla)->
        ask("Соглашение утверждено владельцем системы"),
        text("Номер документа"),
        text("Дата утверждения"),
        ask("Выстроен регулярный процесс сравнения текущих значений параметров с целевыми"),
        options("Периодичность сравнения", [wk, mn, qt, yr])
    ).

% пользовательское взаимодействие сотрудников с системой
dialog(employees):-
    ask("Сотрудники взаимодействуют с системой для выполнения бизнес задач", Employees),
    (   % если сотрудники взаимодействуют с системой
        true(Employees) ->
        dialog(scenarios),
        positive("Сколько сотрудников взаимодействуют с системой"), % уточнить примерное количество
        dialog(roles), % уточнить параметры ролевой модели сотрудников
        ask("Сотрудники взаимодействуют с системой из внутренней сети компании"),
        ask("Сотрудники взаимодействуют с системой из внешней сети через интернет"),
        ask("Пользователи взаимодействуют с системой из внешней сети через выделенный канал"),
        dialog(equipment), % уточнить оборудование, которое используют сотрудники
        dialog(frontend)% уточнить фронтальные компоненты системы, которые используют сотрудники
    ;   !
    ).

% пользовательское взаимодействие клиентов с системой
dialog(clients):-
    ask("У системы есть пользователи, которые не являются сотрудниками", Clients),
    (   % если клиенты взаимодействуют с системой
        true(Clients) ->
        dialog(scenarios),
        positive("Сколько клиентов взаимодействуют с системой"), % уточнить примерное количество
        dialog(roles), % уточнить параметры ролевой модели клиентов
        ask("Пользователи взаимодействуют с системой из внутренней сети компании"),
        ask("Пользователи взаимодействуют с системой из внешней сети через интернет"),
        ask("Пользователи взаимодействуют с системой из внешней сети через выделенный канал"),
        dialog(frontend) % уточнить фронтальные компоненты системы, которые используют клиенты
    ;   !
    ).

% взаимодействие администраторов с системой
dialog(admins):-
    ask("ИТ подразделение компании выполняет функцию администрирования системы", Admin),
    (
        true(Admin) ->
        ask("Администрирование системы осуществляется из внутренней сети"),
        ask("Администрирование системы осуществляется напрямую из интернет"),
        positive("Сколько администраторов взаимодействуют с системой"),
        dialog(equipment),  
        ask("Доступ к системе осуществляется через PAM")
    ;   !
    ).

% компоненты пользовательского взаимодействия
dialog(frontend):-
    ask("Для пользовательского взаимодействия используется мобильное приложение", Mobile), 
    (   % если используется мобильное приложение
        true(Mobile) ->
        dialog(mobile), % уточнить платформу мобильного приложения 
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Для пользовательского взаимодействия используется вэб приложение", Web),
    (   % если используется вэб приложение
        true(Web) ->
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Для пользовательского взаимодействия используется десктопное приложение", Desktop),
    (   % если используется десктопное приложение
        true(Desktop) ->
        dialog(os), % уточнить операционную систему
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Для пользовательского взаимодействия используется консольное приложение", Console),
    (   % если используется консольное приложение
        true(Console) ->
        dialog(os), % уточнить операционную систему
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Пользователи могут вызывать API системы из собственных скриптов", Api),
    (   % если используюся API напрямую
        true(Api) ->
        dialog(api) % уточнить архитектуру API
    ;   !
    ).

% управление ролевой моделью    
dialog(roles):-
    ask("В системе реализована ролевая модель для пользователей", Roles),
    (   % если в системе есть ролевая модель
        true(Roles) ->
        ask("Управление ролевой моделью осуществляется централизовано на уровне компании"), !
    ;   ask("В системе реализована модель полномочий для пользователей", Privileges),
        (   % если в системе есть права пользователей
            true(Privileges) ->
            ask("Управление полномочиями осуществляется централизовано на уровне компании")
        ;   !
        )
    ),
    ask("Управление доступом пользователей к системе осуществляется централизовано на уровне компании").

% мобильные платформы
dialog(mobile):-
    ask("На платформе Google Android"),
    ask("На платформе Apple iOS").

% архитектура API
dialog(api):-
    ask("Используется API на базе REST"),
    ask("Используется API на базе SOAP"),
    ask("Используется API на базе RPC").

% операционные системы
dialog(os):-
    ask("На Windows"),
    ask("На Linux"),
    ask("На MacOS").

% оборудование
dialog(equipment):-
    ask("Для доступа к системе сотрудник использует корпоративное оборудование", Equipment),
    (   % если используется корпоративное оборудование
        true(Equipment) ->
        ask("Персональный компьютер"),
        ask("Ноутбук"),
        ask("Смартфон"),
        ask("Планшет")
    ;   !
    ),
    ask("Для доступа к системе сотрудник использует ВАРМ"),
    ask("Для доступа к системе сотрудник использует личное устройство (BYOD)").

options(S, L):-
    repeat,
    question(S, L),
    read(Ans),
    (
        member(Ans, L) ->
        true, !
    ;   write("Ошибка ввода: введите значение из списка:"), write(L), nl, fail
    ).

% пользователь должен ввести текст
text(S):-
    repeat,
    question(S),
    read(Ans),
    (
        string_length(Ans, N), N>0 ->
        true, !
    ;   write("Ошибка ввода: текстовое значение не может быть пустым, попробуйте еще раз"), nl, fail
    ).

% пользователь должен ввести целое положительное число
positive(S):-
    repeat,
    question(S),
    read(Ans),
    (
        integer(Ans), Ans>0 ->
        true, !
    ;   write("Ошибка ввода: введите целое положительное число, попробуйте еще раз"), nl, fail
    ).

% пользователь должет ответить да или нет
ask(S, Value):-
    repeat,
    question(S),
    read(Ans), 
    (
        member(Ans, ['y', 'n']) ->
        Value = Ans, !
    ;   write("Ошибка ввода: введите y (да) или n (нет), попробуйте еще раз"), nl, fail
    ).

% если пользователь ответил да
true(Value):-
    Value = 'y'.

% обертка, убрать после отладки 
ask(S):-
    ask(S, _).

% отобразить строку со знаком вопроса
mark(S):-
    write(S), write("?").

% отобразить вопрос
question(S):-
    mark(S), nl.

% отобразить вопрос и список возможных ответов
question(S, L):-
    mark(S), tab(4), write("Возможные значения:"), write(L), nl. 

