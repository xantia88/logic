
start:-
    dialog(security), % выяснить про политику информационной безопасности в компании
    dialog(clients), % выяснить как клиенты взаимодействуют с системой
    dialog(employees), % выяснить как сотрудники взаимодействуют с системой
    dialog(admins). % выяснить как осуществляется администрирование системы

% практика киберберзопасности в компании
dialog(security):-
    ask("В компании есть подразделение, выполняющее функции кибербезопасности"),
    ask("В компании есть утвержденная политика информационной безопасности", Policy),
    (   % если есть утвержденная политика информационной безопасности
        true(Policy) ->
        ask("Утвержденная политика информационной безопасности определяет конфиденциальную информацию"),
        text("Номер приказа об утверждении политики информационной безопасности"),
        text("Дата утверждения политики информационной безопасности")
    ;   !
    ).

% пользовательское взаимодействие сотрудников с системой
dialog(employees):-
    ask("Сотрудники взаимодействуют с системой для выполнения бизнес задач", Employees),
    (   % если сотрудники взаимодействуют с системой
        true(Employees) ->
        positive("Сколько сотрудников взаимодействуют с системой"), % уточнить примерное количество
        dialog(roles), % уточнить параметры ролевой модели сотрудников
        ask("Сотрудники взаимодействуют с системой из внутренней сети компании"),
        ask("Сотрудники взаимодействуют с системой напрямую из интернет"),
        dialog(equipment), % уточнить оборудование, которое используют сотрудники
        dialog(frontend)% уточнить фронтальные компоненты системы, которые используют сотрудники
    ;   !
    ).

% пользовательское взаимодействие клиентов с системой
dialog(clients):-
    ask("У системы есть пользователи, которые не являются сотрудниками", Clients),
    (   % если клиенты взаимодействуют с системой
        true(Clients) ->
        positive("Сколько клиентов взаимодействуют с системой"), % уточнить примерное количество
        dialog(roles), % уточнить параметры ролевой модели клиентов
        ask("Пользователи взаимодействуют с системой из внутренней сети компании"),
        ask("Пользователи взаимодействуют с системой напрямую из интернет"),
        dialog(frontend) % уточнить фронтальные компоненты системы, которые используют клиенты
    ;   !
    ).

% взаимодействие администраторов с системой
dialog(admins):-
    ask("Администрирование системы осуществляется из внутренней сети"),
    ask("Администрирование системы осуществляется напрямую из интернет"),
    positive("Сколько администраторов взаимодействуют с системой"),
    dialog(equipment),  
    ask("Доступ к системе осуществляется через PAM").

% компоненты пользовательского взаимодействия
dialog(frontend):-
    ask("Для пользовательского взаимодействия используется мобильное приложение", Mobile), 
    (   % если используется мобильное приложение
        true(Mobile) ->
        dialog(mobile), % уточнить платформу мобильного приложения 
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Для пользовательского взаимодействия используется вэб приложение", Web),
    (   % если используется вэб приложение
        true(Web) ->
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Для пользовательского взаимодействия используется десктопное приложение", Desktop),
    (   % если используется десктопное приложение
        true(Desktop) ->
        dialog(os), % уточнить операционную систему
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Для пользовательского взаимодействия используется консольное приложение", Console),
    (   % если используется консольное приложение
        true(Console) ->
        dialog(os), % уточнить операционную систему
        dialog(api) % уточнить архитектуру API
    ;   !
    ),
    ask("Пользователи могут вызывать API системы из собственных скриптов", Api),
    (   % если используюся API напрямую
        true(Api) ->
        dialog(api) % уточнить архитектуру API
    ;   !
    ).

% управление ролевой моделью    
dialog(roles):-
    ask("В системе реализована ролевая модель для пользователей", Roles),
    (   % если в системе есть ролевая модель
        true(Roles) ->
        ask("Управление ролевой моделью осуществляется централизовано на уровне компании"), !
    ;   ask("В системе реализована модель полномочий для пользователей", Privileges),
        (   % если в системе есть права пользователей
            true(Privileges) ->
            ask("Управление полномочиями осуществляется централизовано на уровне компании")
        ;   !
        )
    ),
    ask("Управление доступом пользователей к системе осуществляется централизовано на уровне компании").

% мобильные платформы
dialog(mobile):-
    ask("На платформе Google Android"),
    ask("На платформе Apple iOS").

% архитектура API
dialog(api):-
    ask("Используется API на базе REST"),
    ask("Используется API на базе SOAP"),
    ask("Используется API на базе RPC").

% операционные системы
dialog(os):-
    ask("На Windows"),
    ask("На Linux"),
    ask("На MacOS").

% оборудование
dialog(equipment):-
    ask("Для доступа к системе сотрудник использует корпоративное оборудование", Equipment),
    (   % если используется корпоративное оборудование
        true(Equipment) ->
        ask("Персональный компьютер"),
        ask("Ноутбук"),
        ask("Смартфон"),
        ask("Планшет")
    ;   !
    ),
    ask("Для доступа к системе сотрудник использует ВАРМ"),
    ask("Для доступа к системе сотрудник использует личное устройство (BYOD)").

% пользователь должен ввести текст
text(S):-
    repeat,
    question(S),
    read(Ans),
    (
        string_length(Ans, N), N>0 ->
        true, !
    ;   write("Ошибка ввода: текстовое значение не может быть пустым, попробуйте еще раз"), nl, fail
    ).

% пользователь должен ввести положительное число
positive(S):-
    repeat,
    question(S),
    read(Ans),
    (
        integer(Ans), Ans>0 ->
        true, !
    ;   write("Ошибка ввода: введите положительное целое число, попробуйте еще раз"), nl, fail
    ).

% пользователь должет ответить да или нет
ask(S, Value):-
    repeat,
    question(S),
    read(Ans), 
    (
        member(Ans, ['y', 'n']) ->
        Value = Ans, !
    ;   write("Ошибка ввода: введите y (да) или n (нет), попробуйте еще раз"), nl, fail
    ).

% если пользователь ответил да
true(Value):-
    Value = 'y'.

% обертка, убрать после отладки 
ask(S):-
    ask(S, _).

% отобразить вопрос
question(S):-
    write(S), write("?"), nl.

